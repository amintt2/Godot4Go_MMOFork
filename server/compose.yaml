services:
  gameserver:
    build:
      context: .
      dockerfile: Dockerfile
    # env_file:
    #   - .env
    environment:
      - PORT=${PORT:-8080} # Define PORT, configurable in Coolify UI, default 8080
      - DATA_PATH=${DATA_PATH:-./data} # Define DATA_PATH, configurable in Coolify UI, default ./data
      - SERVICE_FQDN_GAMESERVER_8080 # Tell Coolify to generate FQDN and proxy to internal port 8080
    volumes:
      - ${DATA_PATH}:/gameserver/data
    labels:
      - traefik.http.services.gameserver-raw.loadbalancer.server.port=8080
      - "traefik.http.routers.gameserver-raw.rule=Host(`hcosw804gkcwcg408cks4k0g.mciut.fr`)"
    ports:
      - "${PORT:-8080}:${PORT:-8080}"
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:${PORT:-8080}/"] # Check if the server responds on the root path
      interval: 30s # Check every 30 seconds
      timeout: 10s # Wait 10 seconds for response
      retries: 3 # Try 3 times before marking as unhealthy
      start_period: 60s # Wait 60 seconds after start before first check
    networks: # Explicitly connect to the coolify network for the proxy
      - coolify

# Define the coolify network as external (created by Coolify)
networks:
  coolify:
    external: true